[{"E:\\Ученики\\Dima Ant Tiktok App\\antd-demo\\src\\index.js":"1","E:\\Ученики\\Dima Ant Tiktok App\\antd-demo\\src\\hooks\\use-auth.js":"2","E:\\Ученики\\Dima Ant Tiktok App\\antd-demo\\src\\App.js":"3","E:\\Ученики\\Dima Ant Tiktok App\\antd-demo\\src\\reportWebVitals.js":"4","E:\\Ученики\\Dima Ant Tiktok App\\antd-demo\\src\\hooks\\use-router.js":"5","D:\\Front-End\\antTikTok\\src\\index.js":"6","D:\\Front-End\\antTikTok\\src\\hooks\\use-auth.js":"7","D:\\Front-End\\antTikTok\\src\\App.js":"8","D:\\Front-End\\antTikTok\\src\\reportWebVitals.js":"9","D:\\Front-End\\antTikTok\\src\\hooks\\use-router.js":"10","D:\\Front-End\\antTikTok\\src\\components\\Header\\index.js":"11","D:\\Front-End\\antTikTok\\src\\components\\Post\\index.js":"12","D:\\Front-End\\antTikTok\\src\\components\\PostFullScreen\\index.js":"13","D:\\Front-End\\antTikTok\\src\\components\\CommentList\\index.js":"14","D:\\Front-End\\antTikTok\\src\\components\\FormSignIn\\index.js":"15","D:\\Front-End\\antTikTok\\src\\components\\FormLogIn\\index.js":"16","D:\\Front-End\\antTikTok\\src\\components\\CommentFormInput\\index.js":"17","D:\\Front-End\\antTikTok\\src\\components\\UserPage\\index.js":"18"},{"size":703,"mtime":1610474964702,"results":"19","hashOfConfig":"20"},{"size":4347,"mtime":1610472326968,"results":"21","hashOfConfig":"20"},{"size":473,"mtime":1610473106384,"results":"22","hashOfConfig":"20"},{"size":362,"mtime":1608725883843,"results":"23","hashOfConfig":"20"},{"size":1649,"mtime":1610472326982,"results":"24","hashOfConfig":"20"},{"size":703,"mtime":1610474966000,"results":"25","hashOfConfig":"26"},{"size":4347,"mtime":1610472328000,"results":"27","hashOfConfig":"26"},{"size":890,"mtime":1610717925037,"results":"28","hashOfConfig":"26"},{"size":362,"mtime":1608725884000,"results":"29","hashOfConfig":"26"},{"size":1649,"mtime":1610472328000,"results":"30","hashOfConfig":"26"},{"size":1327,"mtime":1610718882357,"results":"31","hashOfConfig":"26"},{"size":917,"mtime":1610657863558,"results":"32","hashOfConfig":"26"},{"size":3172,"mtime":1610712099405,"results":"33","hashOfConfig":"26"},{"size":1733,"mtime":1610707036734,"results":"34","hashOfConfig":"26"},{"size":2889,"mtime":1610671815471,"results":"35","hashOfConfig":"26"},{"size":1683,"mtime":1610672494691,"results":"36","hashOfConfig":"26"},{"size":842,"mtime":1610711140474,"results":"37","hashOfConfig":"26"},{"size":2245,"mtime":1610718504717,"results":"38","hashOfConfig":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ioz1vy",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"hupxl0",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Ученики\\Dima Ant Tiktok App\\antd-demo\\src\\index.js",[],"E:\\Ученики\\Dima Ant Tiktok App\\antd-demo\\src\\hooks\\use-auth.js",[],"E:\\Ученики\\Dima Ant Tiktok App\\antd-demo\\src\\App.js",["80","81","82","83","84","85","86"],"E:\\Ученики\\Dima Ant Tiktok App\\antd-demo\\src\\reportWebVitals.js",[],"E:\\Ученики\\Dima Ant Tiktok App\\antd-demo\\src\\hooks\\use-router.js",["87"],"D:\\Front-End\\antTikTok\\src\\index.js",[],["88","89"],"D:\\Front-End\\antTikTok\\src\\hooks\\use-auth.js",[],"D:\\Front-End\\antTikTok\\src\\App.js",["90","91","92","93","94","95"],"D:\\Front-End\\antTikTok\\src\\reportWebVitals.js",[],"D:\\Front-End\\antTikTok\\src\\hooks\\use-router.js",["96"],"import React, { useMemo } from \"react\";\r\nimport { useParams, useLocation, useHistory, useRouteMatch } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\n// Usage\r\n// function MyComponent(){\r\n//   // Get the router object\r\n//   const router = useRouter();\r\n\r\n//   // Get value from query string (?postId=123) or route param (/:postId)\r\n//   console.log(router.query.postId);\r\n\r\n//   // Get current pathname\r\n//   console.log(router.pathname)\r\n\r\n//   // Navigate with with router.push()\r\n//   return (\r\n//     <button onClick={(e) => router.push('/about')}>About</button>\r\n//   );\r\n// }\r\n\r\n// Hook\r\nexport function useRouter() {\r\n  const params = useParams();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n\r\n  // Return our custom router object\r\n  // Memoize so that a new object is only returned if something changes\r\n  return useMemo(() => {\r\n    return {\r\n      // For convenience add push(), replace(), pathname at top level\r\n      push: history.push,\r\n      replace: history.replace,\r\n      pathname: location.pathname,\r\n      // Merge params and parsed query string into single \"query\" object\r\n      // so that they can be used interchangeably.\r\n      // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\r\n      query: {\r\n        ...queryString.parse(location.search), // Convert string to object\r\n        ...params\r\n      },\r\n      // Include match, location, history objects so we have\r\n      // access to extra React Router functionality if needed.\r\n      match,\r\n      location,\r\n      history\r\n    };\r\n  }, [params, match, location, history]);\r\n}","D:\\Front-End\\antTikTok\\src\\components\\Header\\index.js",["97","98"],"D:\\Front-End\\antTikTok\\src\\components\\Post\\index.js",[],"D:\\Front-End\\antTikTok\\src\\components\\PostFullScreen\\index.js",["99","100"],"import { Row, Col, Avatar, Button, Typography, Divider, Tooltip  } from 'antd';\r\nimport { HeartOutlined, \r\n  CommentOutlined, \r\n  ShareAltOutlined, \r\n  CloseOutlined, \r\n  RightOutlined, \r\n  LeftOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport './index.css';\r\nimport CommentList from '../CommentList'\r\nimport CommentFormInput from '../CommentFormInput'\r\n\r\nconst { Paragraph } = Typography;\r\n\r\n\r\nexport default function PostFullScreen() {\r\n\r\n  return (\r\n    <div className='post-full-screen'>\r\n      <Row>\r\n        <Col xs={24} md={16}>\r\n          <div className='post-content'>\r\n            <Button className='btn-close-post' size='large' shape=\"circle\" icon={<CloseOutlined />} />\r\n            <Button className='btn-next-post' size='large' shape=\"circle\" icon={<RightOutlined />} />\r\n            <Button className='btn-prev-post' size='large' shape=\"circle\" icon={<LeftOutlined />} />\r\n            <img className='post-img' src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\" alt='post'></img>\r\n          </div>\r\n        </Col>\r\n        <Col xs={24} md={8}>\r\n          <div className='post-info-container'>\r\n            <div className='post-header'>\r\n              <div className='user-info'>\r\n                <Avatar\r\n                  className='user-avatar'\r\n                  size={60}\r\n                  src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                  alt=\"Han Solo\"\r\n                />\r\n\r\n                <div className='user-info-links-container'>\r\n                  <a href='#' className='user-username'>User name</a>\r\n                  <a href='#' className='user-nickname'>User name</a>\r\n                </div>\r\n              </div>  \r\n\r\n              <Button size='large'>Subscribe</Button>\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <Paragraph className='post-description'>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</Paragraph>\r\n            <Divider />\r\n            <div className='post-action-container'>\r\n              <div className='like-action'>\r\n                <Button className='like-btn' size='large' shape=\"circle\" icon={<HeartOutlined />} />\r\n                <strong className='like-amount'>133</strong>\r\n              </div>\r\n              <div className='comment-action'>\r\n                <Button className='comment-btn' size='large' shape=\"circle\" icon={<CommentOutlined />} />\r\n                <strong className='comment-amount'>33</strong>\r\n              </div>\r\n              <div className='share-action'>\r\n                <Tooltip title='Copy link'>\r\n                  <Button size='large' shape=\"circle\" icon={<ShareAltOutlined />} />\r\n                </Tooltip>\r\n              </div>\r\n            </div>\r\n            <Divider />\r\n\r\n            <CommentList />\r\n            <CommentFormInput />\r\n\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}","D:\\Front-End\\antTikTok\\src\\components\\CommentList\\index.js",[],"D:\\Front-End\\antTikTok\\src\\components\\FormSignIn\\index.js",["101"],"import React, { useState } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 8,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 8,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nexport default function RegistrationForm() {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      size='large'\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      scrollToFirstError\r\n    >\r\n      <Form.Item\r\n        name=\"name\"\r\n        label='Name'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your name!',\r\n            whitespace: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"nickname\"\r\n        label='Nickname'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your nickname!',\r\n            whitespace: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(_, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n\r\n              return Promise.reject('The two passwords that you entered do not match!');\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      \r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};","D:\\Front-End\\antTikTok\\src\\components\\FormLogIn\\index.js",["102"],"import { Form, Input, Button } from 'antd';\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 8,\r\n    }\r\n  },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nexport default function NormalLoginForm() {\r\n  const onFinish = (values) => {\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form-wrapper\">\r\n      <Form\r\n        {...formItemLayout}\r\n        name=\"normal_login\"\r\n        size='large'\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n      >\r\n        \r\n        <Form.Item\r\n          name=\"email\"\r\n          label='E-mail'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n          \r\n        >\r\n          <Input type='email' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          label='Password'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your Password!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{marginRight: '20px'}}>\r\n            Log in\r\n          </Button>\r\n          Or <a href=\"\">register now!</a>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};","D:\\Front-End\\antTikTok\\src\\components\\CommentFormInput\\index.js",[],"D:\\Front-End\\antTikTok\\src\\components\\UserPage\\index.js",["103","104"],{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"109","line":6,"column":20,"nodeType":"107","messageId":"108","endLine":6,"endColumn":26},{"ruleId":"105","severity":1,"message":"110","line":7,"column":3,"nodeType":"107","messageId":"108","endLine":7,"endColumn":9},{"ruleId":"105","severity":1,"message":"111","line":8,"column":3,"nodeType":"107","messageId":"108","endLine":8,"endColumn":8},{"ruleId":"105","severity":1,"message":"112","line":9,"column":3,"nodeType":"107","messageId":"108","endLine":9,"endColumn":7},{"ruleId":"105","severity":1,"message":"113","line":16,"column":9,"nodeType":"107","messageId":"108","endLine":16,"endColumn":13},{"ruleId":"105","severity":1,"message":"114","line":17,"column":9,"nodeType":"107","messageId":"108","endLine":17,"endColumn":15},{"ruleId":"105","severity":1,"message":"115","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":13},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"105","severity":1,"message":"109","line":6,"column":20,"nodeType":"107","messageId":"108","endLine":6,"endColumn":26},{"ruleId":"105","severity":1,"message":"110","line":7,"column":3,"nodeType":"107","messageId":"108","endLine":7,"endColumn":9},{"ruleId":"105","severity":1,"message":"111","line":8,"column":3,"nodeType":"107","messageId":"108","endLine":8,"endColumn":8},{"ruleId":"105","severity":1,"message":"112","line":9,"column":3,"nodeType":"107","messageId":"108","endLine":9,"endColumn":7},{"ruleId":"105","severity":1,"message":"113","line":20,"column":9,"nodeType":"107","messageId":"108","endLine":20,"endColumn":13},{"ruleId":"105","severity":1,"message":"114","line":21,"column":9,"nodeType":"107","messageId":"108","endLine":21,"endColumn":15},{"ruleId":"105","severity":1,"message":"115","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":39,"column":9,"nodeType":"122","endLine":39,"endColumn":69},{"ruleId":"120","severity":1,"message":"121","line":44,"column":9,"nodeType":"122","endLine":44,"endColumn":69},{"ruleId":"120","severity":1,"message":"121","line":42,"column":19,"nodeType":"122","endLine":42,"endColumn":57},{"ruleId":"120","severity":1,"message":"121","line":43,"column":19,"nodeType":"122","endLine":43,"endColumn":57},{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":78,"column":14,"nodeType":"122","endLine":78,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":29,"column":13,"nodeType":"122","endLine":29,"endColumn":46},{"ruleId":"120","severity":1,"message":"121","line":30,"column":13,"nodeType":"122","endLine":30,"endColumn":46},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'auth' is assigned a value but never used.","'router' is assigned a value but never used.","'React' is defined but never used.","no-native-reassign",["123"],"no-negated-in-lhs",["124"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]